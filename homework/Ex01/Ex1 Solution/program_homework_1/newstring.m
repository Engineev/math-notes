function  [p,A,a,sums] = newstring(p,A,a,sums)

%% 第一个右括号的标号
ind2 = find (a ==')'); % 找到所有右括号的下标
ind2 = ind2(1);  % 第一个为需要的

% 找到相应的左括号标号
% ind1 = find(a == '(');  % 找到所有左括号的下标
% tem = find(ind1 < ind2); % 在右括号旁边的所有左括号的索引
% ind1 = ind1(tem(end)); % 索引对应的最后一个即为所求
ind1 = ind2 - 3;

%% 新的 p (转化为 1234...) 与数乘步数
n0 = double(a(ind1+1)) - '1' + 1; % 删除部分对应的第一个真实数字 
sums = sums + p(n0)*p(n0+1)*p(n0+2);
p(n0+1) = []; % 只要删除第二个，因为新的乘积矩阵还有维数
 

%% 新的矩阵 (转化为 1234...)
B = A{n0}*A{n0+1}; % 因为一定是两个相乘
A{n0} = B;
A(n0+1) = []; 

%% 新的字符
a(ind1) = '1'; % 删除部分第一个赋值为 '1'
a(ind1+1:ind2) = []; % 删除后面几位
ind = find(a >='1'); % 找到数字的位置
a(ind) = (0:length(ind)-1) + '1'; 

    
